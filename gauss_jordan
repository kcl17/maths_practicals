import numpy as np

# Define the matrix A
A = np.array([[1, 2, -1],
              [2, -1, 3],
              [3, 1, 1]])

# Perform Gauss Jordan elimination
n = len(A)
for i in range(n):
    # Divide the ith row by the ith diagonal element
    pivot = A[i][i]
    A[i] /= pivot
    
    # Subtract the ith row from all the other rows to eliminate the ith column
    for j in range(n):
        if i != j:
            A[j] -= A[j][i] * A[i]
            
# The solutions are the normalized row vectors of the reduced echelon form of A
solutions = [row / np.linalg.norm(row) for row in A if np.count_nonzero(row) == 1]
print("Solutions:", solutions)
